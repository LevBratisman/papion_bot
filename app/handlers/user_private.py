import asyncio
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import CommandStart
from aiogram import Router, F
from sqlalchemy.ext.asyncio import AsyncSession

from app.keyboards.reply import get_keyboard
from app.database.dao import orm_add_user
from app.common.texts import menu_text, about_info

start_keyboard = get_keyboard(
    "üëç–ö–æ–Ω–µ—á–Ω–æ",
    "‚û°Ô∏è–ü–æ–∑–∂–µ",
    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    sizes=(2,)
)

menu_keyboard = get_keyboard(
    "1",
    "2",
    "3",
    "üí∏4",
    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    sizes=(4,)
)


user_private_router = Router()

@user_private_router.message(CommandStart())
async def command_start(message: Message, session: AsyncSession):
    await message.answer_sticker("CAACAgIAAxkBAAIQpWYU9mtrJiFzeDz638kyo_vHiWj0AAKwCwACLw_wBrvBiwJ7mTB8NAQ", 
                                 reply_markup=ReplyKeyboardRemove())
    await asyncio.sleep(1)
    await message.answer(f"ü§ñ–ë–æ–Ω–∂—É—Ä, <b>{message.from_user.full_name}</b>! –Ø –ü–∞–ø–∏–π–æ–Ω, –≤–∞—à –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!")
    await orm_add_user(session, user_id=message.from_user.id, user_name=message.from_user.full_name)
    await message.answer("–ú–Ω–µ –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ, —á—Ç–æ —Å–∫–∞–∂–µ—Ç–µ?", reply_markup=start_keyboard)


@user_private_router.message(F.text.casefold() == "üëç–∫–æ–Ω–µ—á–Ω–æ")
async def show_details(message: Message):
    await message.answer(about_info, reply_markup=ReplyKeyboardRemove())
    await asyncio.sleep(1)
    await message.answer("üî• –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è! –ò –∫–æ–Ω–µ—á–Ω–æ –∂–µ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!")
    await message.answer(menu_text, reply_markup=menu_keyboard)
    
    
@user_private_router.message(F.text.casefold() == "‚û°Ô∏è–ø–æ–∑–∂–µ")
async def to_menu(message: Message):
    await message.answer(f"üî• –¢–æ–≥–¥–∞ –ø–µ—Ä–µ–π–¥–µ–º —Å—Ä–∞–∑—É –∫ –¥–µ–ª—É!\n\n")
    await message.answer(menu_text, reply_markup=menu_keyboard)
    
    
@user_private_router.message(F.text.casefold() == "üí∏4")
async def donate(message: Message):
    await message.answer(f"üåê –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ (–ø–ª–∞—Ç–Ω–æ–≥–æ) API OpenAI\n\n" + 
                         f"–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ–π–¥—É—Ç –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –º–æ–µ–π —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.\n\n" +
                         f"–ï—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await asyncio.sleep(3)
    await message.answer(menu_text, reply_markup=menu_keyboard)
    
    
@user_private_router.message()
async def incorrect_message(message: Message):
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é (–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É)")
    
    
